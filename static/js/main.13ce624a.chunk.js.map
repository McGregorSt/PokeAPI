{"version":3,"sources":["PokeDisplay/PokesList/PokeElement/PokeDetails/PokeStats.js","PokeDisplay/PokesList/PokeElement/PokeDetails/PokeDetails.js","PokeDisplay/PokesList/PokeElement/PokeElement.js","PokeDisplay/PokesList/PokesList.js","PokeDisplay/PokeDisplay.js","PokeFilter/FilterInput/FilterInput.js","PokeFilter/PokeFilter.js","App.js","serviceWorker.js","index.js"],"names":["PokeStats","stats","this","props","statsClicked","displayDetails","map","detail","ability","name","stat","base_stat","className","toUpperCase","Component","PokeDetails","state","showDetails","detailsToDisplay","showDetailsClicked","details","pokeDetails","abilities","onDetailsClick","e","ind","stopPropagation","target","innerText","toLowerCase","setState","key","onClick","pokeStats","pokeName","PokeElement","isClicked","pokeElement","clickedPoke","pokeInd","clicked","PokesList","pokesList","pokesFetched","currentPokes","poke","url","active","Pagination","count","countPages","shape","variant","onChange","paginationChange","size","PokeDisplay","pokesToDisplay","filteredPokes","PokeInd","FilterInput","placeholder","filterPokes","onKeyDown","keyDown","PokeFilter","baseUrl","App","pokesPerPage","currentPage","fetchPokesList","fetchUrl","then","pokes","a","json","results","endpoint","fetch","response","clickedPokeHandler","pokeUrl","filter","includes","value","keyDownHandler","keyCode","onPaginationChangeHandler","checkWidth","window","innerWidth","addEventListener","lastPoke","firstPoke","slice","Math","ceil","length","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13ce624a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './PokeStats.css'\r\n\r\nclass PokeStats extends Component {\r\n  render() {\r\n    const stats = this.props.statsClicked\r\n    const displayDetails = this.props.displayDetails.map((detail) => {\r\n      if (stats === 'abilities') {\r\n        return <li>{detail.ability.name}</li>\r\n      } else if (stats === 'stats') {\r\n        return (\r\n          <li>\r\n            {detail.stat.name}: {detail.base_stat} pts\r\n          </li>\r\n        )\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div className=\"PokeStats\">\r\n        <div className=\"PokeStats__header\">{stats.toUpperCase()}</div>\r\n        <ul className=\"PokeStats__list\">{displayDetails}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokeStats\r\n","import React, { Component } from 'react'\r\n\r\nimport './PokeDetails.css'\r\nimport PokeStats from './PokeStats'\r\n\r\nclass PokeDetails extends Component {\r\n  state = {\r\n    showDetails: false,\r\n    statsClicked: '',\r\n    detailsToDisplay: [],\r\n  }\r\n\r\n  showDetailsClicked = (details) => {\r\n    switch (details) {\r\n      case 'abilities':\r\n        return this.props.pokeDetails.abilities\r\n      case 'stats':\r\n        return this.props.pokeDetails.stats\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  onDetailsClick = (e, ind) => {\r\n    e.stopPropagation()\r\n\r\n    const statsClicked = e.target.innerText.toLowerCase()\r\n    this.setState({ statsClicked: statsClicked })\r\n\r\n    if (ind !== null && !this.state.showDetails) {\r\n      this.setState({ showDetails: !this.state.showDetails })\r\n    }\r\n    this.setState({ detailsToDisplay: this.showDetailsClicked(statsClicked) })\r\n  }\r\n\r\n  render() {\r\n    const details = ['abilities', 'stats']\r\n\r\n    let pokeDetails = details.map((detail, ind) => {\r\n      return (\r\n        <div key={detail} onClick={(e) => this.onDetailsClick(e, ind)}>\r\n          {detail.toUpperCase()}\r\n        </div>\r\n      )\r\n    })\r\n\r\n    let pokeStats = ''\r\n    if (this.state.showDetails) {\r\n      pokeStats = (\r\n        <PokeStats\r\n          statsClicked={this.state.statsClicked}\r\n          displayDetails={this.state.detailsToDisplay}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"PokeDetails\">\r\n        <div className=\"PokeName\">{this.props.pokeName}</div>\r\n        <div className=\"PokeSkills\">\r\n          {this.state.showDetails ? pokeStats : pokeDetails}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokeDetails\r\n","import React, { Component } from 'react'\r\n\r\nimport './PokeElement.css'\r\nimport PokeDetails from './PokeDetails/PokeDetails'\r\n\r\nclass PokeElement extends Component {\r\n  state = {\r\n    isClicked: false,\r\n  }\r\n\r\n  render() {\r\n    let pokeElement = <p>{this.props.name}</p>\r\n\r\n    if (this.props.clickedPoke === this.props.pokeInd) {\r\n      pokeElement = (\r\n        <PokeDetails\r\n          pokeName={this.props.name}\r\n          pokeDetails={this.props.pokeDetails}\r\n          isClicked={this.props.isClicked}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <li className={`PokeElm`} onClick={this.props.clicked}>\r\n        {pokeElement}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokeElement\r\n","import React, { Component } from 'react'\r\nimport { Pagination } from '@material-ui/lab'\r\n\r\nimport './PokesList.css'\r\nimport PokeElement from './PokeElement/PokeElement'\r\n\r\nclass PokesList extends Component {\r\n  render() {\r\n    let pokesList = ''\r\n\r\n    if (this.props.pokesFetched) {\r\n      pokesList = this.props.currentPokes.map((poke, ind) => {\r\n        return (\r\n          <div className={`Pokes`}>\r\n            <PokeElement\r\n              key={ind}\r\n              name={poke.name}\r\n              pokeInd={ind}\r\n              clicked={(e) => this.props.clicked(e, ind, poke.url)}\r\n              clickedPoke={this.props.clickedPoke}\r\n              pokeDetails={this.props.pokeDetails}\r\n              active={this.props.active}\r\n            />\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div className=\"PokesList\">\r\n        <ul className=\"PokesGrid\">{pokesList}</ul>\r\n        <div className=\"Pagination\">\r\n          <Pagination\r\n            count={this.props.countPages}\r\n            shape=\"rounded\"\r\n            variant=\"outlined\"\r\n            onChange={this.props.paginationChange}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokesList\r\n","import React, { Component } from 'react'\r\n\r\nimport './PokeDisplay.css'\r\nimport PokesList from './PokesList/PokesList'\r\n\r\nclass PokeDisplay extends Component {\r\n  render() {\r\n    const pokesList = (\r\n      <PokesList\r\n        pokesToDisplay={this.props.pokesToDisplay}\r\n        pokesFetched={this.props.pokesFetched}\r\n        pokesList={this.props.pokesList}\r\n        filteredPokes={this.props.filteredPokes}\r\n        currentPokes={this.props.currentPokes}\r\n        clicked={this.props.clicked}\r\n        clickedPoke={this.props.clickedPoke}\r\n        pokeDetails={this.props.pokeDetails}\r\n        pokeInd={this.props.PokeInd}\r\n        active={this.props.active}\r\n        countPages={this.props.countPages}\r\n        paginationChange={this.props.paginationChange}\r\n      />\r\n    )\r\n    return <div>{pokesList}</div>\r\n  }\r\n}\r\n\r\nexport default PokeDisplay\r\n","import React, { Component } from 'react'\r\n\r\nimport './FilterInput.css'\r\nclass FilterInput extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"FilterInput\">\r\n        <input\r\n          placeholder='Search for your favourite Poke'\r\n          className=\"FilterInput__input\"\r\n          onChange={this.props.filterPokes}\r\n          onKeyDown={this.props.keyDown}\r\n        ></input>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterInput\r\n","import React, { Component } from 'react'\r\n\r\nimport './PokeFilter.css'\r\nimport FilterInput from './FilterInput/FilterInput'\r\n\r\nclass PokeFilter extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"PokeFilter\">\r\n          <FilterInput\r\n            filterPokes={this.props.filterPokes}\r\n            keyDown={this.props.keyDown}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokeFilter\r\n","import React, { Component } from 'react'\r\n\r\nimport './App.css'\r\nimport PokeDisplay from './PokeDisplay/PokeDisplay'\r\nimport PokeFilter from './PokeFilter/PokeFilter'\r\n\r\nconst baseUrl = 'https://pokeapi.co/api/v2/pokemon/?limit=44&offset=0'\r\nclass App extends Component {\r\n  state = {\r\n    pokesFetched: false,\r\n    pokesList: [],\r\n    filteredPokes: [],\r\n    pokesPerPage: 10,\r\n    currentPage: 1,\r\n    clickedPoke: null,\r\n    pokeDetails: {},\r\n  }\r\n\r\n  fetchPokesList = () => {\r\n    return this.fetchUrl(baseUrl).then(async (pokes) => {\r\n      const pokesList = await pokes.json()\r\n\r\n      this.setState({\r\n        pokesList: pokesList.results,\r\n        filteredPokes: pokesList.results,\r\n        pokesFetched: true,\r\n      })\r\n    })\r\n  }\r\n\r\n  fetchUrl = async (endpoint) => {\r\n    const response = await fetch(endpoint)\r\n    return response\r\n  }\r\n\r\n  clickedPokeHandler = (e, ind, pokeUrl) => {\r\n    if (this.state.clickedPoke === ind) {\r\n      this.setState({ clickedPoke: null })\r\n    } else {\r\n      this.setState({ clickedPoke: ind })\r\n      this.fetchUrl(pokeUrl).then(async (poke) => {\r\n        const details = await poke.json()\r\n        this.setState({ pokeDetails: details })\r\n      })\r\n    }\r\n  }\r\n\r\n  filterPokes = (e) => {\r\n    this.setState({ currentPage: 1 })\r\n    const filteredPokes = this.state.filteredPokes.filter((poke) =>\r\n      poke.name.includes(e.target.value)\r\n    )\r\n    this.setState({\r\n      filteredPokes: filteredPokes,\r\n      currentPokes: filteredPokes,\r\n    })\r\n  }\r\n\r\n  keyDownHandler = (e) => {\r\n    if (e.keyCode === 8) {\r\n      this.setState({ filteredPokes: this.state.pokesList })\r\n    }\r\n  }\r\n\r\n  onPaginationChangeHandler = (e, value) => {\r\n    this.setState({ currentPage: value })\r\n  }\r\n\r\n  checkWidth = () => {\r\n    if (window.innerWidth < 1700) {\r\n      this.setState({ pokesPerPage: 8 })\r\n    }\r\n    if (window.innerWidth < 1300) {\r\n      this.setState({ pokesPerPage: 6 })\r\n    }\r\n    if (window.innerWidth < 1000) {\r\n      this.setState({ pokesPerPage: 4 })\r\n    }\r\n    if (window.innerWidth < 1000) {\r\n      this.setState({ pokesPerPage: 4 })\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.fetchPokesList()\r\n    window.addEventListener('resize', this.checkWidth)\r\n  }\r\n\r\n  render() {\r\n    const lastPoke = this.state.currentPage * this.state.pokesPerPage\r\n    const firstPoke = lastPoke - this.state.pokesPerPage\r\n    const currentPokes = this.state.filteredPokes.slice(firstPoke, lastPoke)\r\n    const countPages = Math.ceil(\r\n      this.state.filteredPokes.length / this.state.pokesPerPage\r\n    )\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <PokeFilter\r\n          filterPokes={(e) => this.filterPokes(e)}\r\n          keyDown={(e) => this.keyDownHandler(e)}\r\n        />\r\n        <PokeDisplay\r\n          pokesFetched={this.state.pokesFetched}\r\n          pokesList={this.state.pokesList}\r\n          filteredPokes={this.state.filteredPokes}\r\n          currentPokes={currentPokes}\r\n          clicked={this.clickedPokeHandler}\r\n          clickedPoke={this.state.clickedPoke}\r\n          pokeDetails={this.state.pokeDetails}\r\n          countPages={countPages}\r\n          paginationChange={this.onPaginationChangeHandler}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}